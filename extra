app.get('/', (request, response) => {
  getAAlbums((error, albums) => {
    if (error) {
      response.status(500).render('error', { error: error })
    } else {
      response.render('index', { albums: albums })
    }
  })
})

//
// app.get('/login', (request, response) => {
//   getAlbums((error, albums) => {
//     if (error) {
//       response.status(500).render('error', { error: error })
//     } else {
//       response.render('login', { albums: albums })
//     }
//   })
// })
//
// app.get('/albums/:albumID', (request, response) => {
//   const {albumID} = request.params
//   getAlbumsByID(albumID, (error, albums) => {
//     if (error) {
//       response.status(500).render('error', { error: error })
//     } else {
//       response.render('album')
//     }
//   })
// })


// app.get('/album', (request, response) => {
//   getAlbums((error, albums) => {
//     if (error) {
//       response.status(500).render('error', { error: error })
//     } else {
//       response.render('album', { albums: albums })
//     }
//   })
// })
//
// app.get('/profile', (request, response) => {
//   getAlbums((error, albums) => {
//     if (error) {
//       response.status(500).render('error', { error: error })
//     } else {
//       response.render('profile', { albums: albums })
//     }
//   })
// })
//
// app.get('/review', (request, response) => {
//   const albumTitle = request.params.albumTitle
//   getAlbumByTitle(albumTitle, (error, albums) => {
//     if (error) {
//       response.status(500).render('error', { error: error })
//     } else {
//       console.log('album', album)
//       const album = albums[0]
//       response.render('newReview', { album: album })
//     }
//   })
// })
//
// app.get('/signup', (request, response) => {
//   getAlbums((error, albums) => {
//     if (error) {
//       response.status(500).render('error', { error: error })
//     } else {
//       response.render('signup', { albums: albums })
//     }
//   })
// })

// app.get('/albums/:albumID', (request, response) => {
//   const {albumID} = request.params
// console.log(getAlbumsByID(albumID))
//   getAlbumsByID(albumID, (error, albums) => {
//     if (error) {
//       response.status(500).render('error', { error: error })
//     } else {
//       response.render('album', { album: album[0] })
//     }
//   })
// })

// app.use((request, response) => {
//   response.status(404).render('not_found')
// })
